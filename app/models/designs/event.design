language: "javascript"
views: {

  all: {
    map: "function(document) {
      if (document['model_class'] == 'Event') {
        var created_on_date = document.created_at.replace(/ .*$/, '');
        var created_at_time = document.created_at.replace(/^[-\d]+ /, '');
        emit([created_on_date, created_at_time], null);
      }
    }",
    reduce: "function(key, values, rereduce) {
      if (rereduce) {
        return sum(values);
      } else {
        return values.length;
      }
    }"
  },

  by_environment_and_application: {
    map: "function(document) {
      if (document['model_class'] == 'Event') {
        emit([document.environment, document.application, document.created_at], null);
      }
    }",
    reduce: "function(key, values, rereduce) {
      if (rereduce) {
        return sum(values);
      } else {
        return values.length;
      }
    }"
  },

  by_environment_and_application_and_title: {
    map: "function(document) {
      if (document['model_class'] == 'Event') {
        emit([document.environment, document.application, document.title, document.created_at], null);
      }
    }",
    reduce: "function(key, values, rereduce) {
      if (rereduce) {
        return sum(values);
      } else {
        return values.length;
      }
    }"
  },

  by_environment_and_application_and_node: {
    map: "function(document) {
      if (document['model_class'] == 'Event') {
        emit([document.environment, document.application, document.node, document.created_at], null);
      }
    }",
    reduce: "function(key, values, rereduce) {
      if (rereduce) {
        return sum(values);
      } else {
        return values.length;
      }
    }"
  },

  by_environment_and_application_and_controller: {
    map: "function(document) {
      if (document['model_class'] == 'Event') {
        emit([document.environment, document.application, document.controller, document.created_at], null);
      }
    }",
    reduce: "function(key, values, rereduce) {
      if (rereduce) {
        return sum(values);
      } else {
        return values.length;
      }
    }"
  },

  by_environment_and_application_and_controller_and_action: {
    map: "function(document) {
      if (document['model_class'] == 'Event') {
        emit([document.environment, document.application, document.controller, document.action, document.created_at], null);
      }
    }",
    reduce: "function(key, values, rereduce) {
      if (rereduce) {
        return sum(values);
      } else {
        return values.length;
      }
    }"
  },

  by_environment_and_application_and_controller_and_action_and_title: {
    map: "function(document) {
      if (document['model_class'] == 'Event') {
emit([document.environment, document.application, document.controller, document.action, document.title, document.created_at], null);
      }
    }",
    reduce: "function(key, values, rereduce) {
      if (rereduce) {
        return sum(values);
      } else {
        return values.length;
      }
    }"
  }
}
